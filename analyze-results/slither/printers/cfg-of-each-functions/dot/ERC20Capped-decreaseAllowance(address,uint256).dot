digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
currentAllowance = _allowances[_msgSender()][spender]

IRs:
TMP_188(address) = INTERNAL_CALL, Context._msgSender()()
REF_59(mapping(address => uint256)) -> _allowances[TMP_188]
REF_60(uint256) -> REF_59[spender]
currentAllowance(uint256) := REF_60(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(currentAllowance >= subtractedValue,ERC20: decreased allowance below zero)

IRs:
TMP_189(bool) = currentAllowance >= subtractedValue
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,ERC20: decreased allowance below zero)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_approve(_msgSender(),spender,currentAllowance - subtractedValue)

IRs:
TMP_191(address) = INTERNAL_CALL, Context._msgSender()()
TMP_192(uint256) = currentAllowance - subtractedValue
INTERNAL_CALL, ERC20._approve(address,address,uint256)(TMP_191,spender,TMP_192)"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
true

IRs:
RETURN True"];
}
