digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
! hasRole(role,account)

IRs:
TMP_6(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(role,account)
TMP_7 = ! TMP_6 
CONDITION TMP_7"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
revert(string)(string(abi.encodePacked(AccessControl: account ,Strings.toHexString(uint160(account),20), is missing role ,Strings.toHexString(uint256(role),32))))

IRs:
TMP_8 = CONVERT account to uint160
TMP_9(string) = LIBRARY_CALL, dest:Strings, function:Strings.toHexString(uint256,uint256), arguments:['TMP_8', '20'] 
TMP_10 = CONVERT role to uint256
TMP_11(string) = LIBRARY_CALL, dest:Strings, function:Strings.toHexString(uint256,uint256), arguments:['TMP_10', '32'] 
TMP_12(bytes) = SOLIDITY_CALL abi.encodePacked()(AccessControl: account ,TMP_9, is missing role ,TMP_11)
TMP_13 = CONVERT TMP_12 to string
TMP_14(None) = SOLIDITY_CALL revert(string)(TMP_13)"];
2->3;
3[label="Node Type: END_IF 3
"];
}
